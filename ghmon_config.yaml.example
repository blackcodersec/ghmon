# ghmon-cli Configuration Example
# Copy this file to ghmon_config.yaml and customize for your environment

# General application settings
general:
  log_level: info  # debug, info, warning, error, critical
  output_dir: "./output"  # Directory for scan results and logs
  max_workers: 4  # Number of concurrent scanning threads

# GitHub configuration
github:
  enabled: true
  api_url: https://api.github.com
  tokens:
    # GitHub Personal Access Tokens (ghp_...)
    # Replace with your actual GitHub tokens
    # Generate tokens at: https://github.com/settings/tokens
    # Required scopes: repo (for private repos) or public_repo (for public repos only)
    - "YOUR_GITHUB_TOKEN_1_HERE"
    - "YOUR_GITHUB_TOKEN_2_HERE"
    # Add more tokens as needed for rate limit distribution

# GitLab configuration
gitlab:
  enabled: false
  api_url: https://gitlab.com/api/v4
  tokens:
    # GitLab Personal Access Tokens (glpat-...)
    # Replace with your actual GitLab tokens
    # Generate tokens at: https://gitlab.com/-/profile/personal_access_tokens
    # Required scopes: read_api, read_repository
    - "YOUR_GITLAB_TOKEN_HERE"

# Notification settings
notifications:
  discord:
    enabled: false  # Set to true and configure webhook_url to enable Discord notifications
    webhook_url: "YOUR_DISCORD_WEBHOOK_URL_HERE"
    # To get a Discord webhook URL:
    # 1. Go to your Discord server settings
    # 2. Navigate to Integrations > Webhooks
    # 3. Create a new webhook and copy the URL
  telegram:
    enabled: false  # Set to true and configure bot_token/chat_id to enable Telegram notifications
    bot_token: "YOUR_TELEGRAM_BOT_TOKEN_HERE"
    chat_id: "YOUR_TELEGRAM_CHAT_ID_HERE"
    # To get Telegram credentials:
    # 1. Create a bot by messaging @BotFather on Telegram
    # 2. Get your chat ID by messaging @userinfobot
    # 3. Replace the placeholders above with your actual values

# Operational settings
operation:
  scan_interval: 21600 # 6 hours between monitor cycles (in seconds)
  max_repos_per_org: 100 # Limit repos per organization (0 = no limit)
  skip_forks: true # Skip forked repositories
  skip_archived: true # Skip archived repositories

# TruffleHog configuration
trufflehog:
  binary_path: "trufflehog" # Path to TruffleHog binary
  verified_only: true # Only report verified secrets
  timeout: 300 # Scan timeout per repository (seconds)
  git_clone_timeout: 300 # Git clone timeout (seconds)
  git_show_timeout: 180 # Git show timeout (seconds)
  git_unpack_timeout: 900 # Git unpack timeout (seconds)

# Organizations to scan
organizations:
  - your-organization-1 # Replace with actual organization names
  - your-organization-2
  # Add more organizations as needed

# Specific repositories (optional)
targets: [] # Individual repo URLs if needed
